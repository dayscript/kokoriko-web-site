{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/accompaniments/accompaniments.component.css","webpack:///./src/app/accompaniments/accompaniments.component.html","webpack:///./src/app/accompaniments/accompaniments.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div id=\\\"cuenta\\\">\\n    <!--Hola + Botones de usuario-->\\n    <div class=\\\"row user-container\\\">\\n\\n        <div class=\\\"medium-4 columns\\\">\\n            <div class=\\\"row\\\">\\n                <!--<div class=\\\"small-4 columns\\\">\\n                    <img src=\\\"{{user.user_picture}}\\\" alt=\\\"\\\" class=\\\"photo\\\">\\n                </div>-->\\n\\n                <div class=\\\"small-12 columns text-align-left\\\">\\n                    <div class=\\\"hi\\\">HOLA</div>\\n                    <div class=\\\"user\\\">{{user.field_nombres}} {{user.field_apellidos}}</div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"columns medium-7\\\">\\n            <div class=\\\"botones\\\">\\n                <a href=\\\"#block-comofunciona\\\" id=\\\"menu-como\\\" class=\\\"button account\\\">¿Cómo funciona?</a>\\n                <a *ngIf=\\\"user.uid ==  user.user_login\\\" href=\\\"/user/{{user.uid}}/edit\\\" class=\\\"button account\\\">Actualizar datos</a>\\n                <a href=\\\"/user/logout\\\" class=\\\"button account\\\">Cerrar sesión</a>\\n            </div>\\n        </div>\\n    </div>\\n    <!--Hola + Botones de usuario--> \\n\\n\\n    <!--Banner central-->\\n    <div class=\\\"row hide-for-small-only\\\">\\n        <div class=\\\"columns medium-12\\\">\\n            <img src=\\\"/themes/contrib/kokoriko_theme/images/banner-kkp.jpg\\\" alt=\\\"\\\" class=\\\"banner\\\">\\n        </div>\\n    </div>\\n    <!--Banner central-->\\n\\n    <!--Estado de cuenta-->\\n    <div class=\\\"row\\\">\\n        <!--Navegador izquierda-->\\n        <div class=\\\"columns medium-4\\\">\\n            <div class=\\\"container-cuenta\\\">\\n                <h3>Estado de cuenta</h3>\\n                <hr>\\n                <div class=\\\"fecha\\\"></div>\\n                <div>Tienes disponibles</div>\\n\\n                <div *ngIf=\\\"getTotalPoints() !== false else elseKokoripesos\\\" [innerHTML]=getTotalPoints() class=\\\"kokoripesos\\\"> </div>\\n                <ng-template #elseKokoripesos>Cargando...</ng-template>\\n                <img src=\\\"/themes/contrib/kokoriko_theme/images/kokoripesos-red.png\\\" alt=\\\"\\\" class=\\\"text-center\\\">\\n                <p class=\\\"legal\\\">*Estimado cliente, estamos trabajando por ti es por esto que tus puntos están siendo validados  y serán sujetos a ajustes de acuerdo a las compras registradas con tu numero de cedula, sin embargo no dudes en comunicarte con nosotros ante cualquier novedad al siguiente correo servicioalcliente@grupoiga.co.</p>\\n\\n                <hr>\\n                <div *ngIf=\\\"getPointsOvercome() else elseOvercome\\\" [innerHTML]=getPointsOvercome() class=\\\"kokoripesos\\\"> </div>\\n                <ng-template #elseOvercome>--</ng-template>\\n\\n                <div class=\\\"vencidos\\\"><span>{{getPointsOvercome()}} Kokoripesos </span> por vencer</div>\\n                <div class=\\\"fecha\\\"> {{getDate() | date: 'mediumDate'}}</div>\\n                <hr>\\n                <div class=\\\"recent\\\">Última redención:   <span>{{ getRedemptionLast() | date}}</span></div>\\n                <div class=\\\"recent\\\">Última acumulación: <span>{{ getInvoiceLast()    | date}}</span></div>\\n            </div>\\n        </div>\\n        <!--Navegador izquierda-->\\n\\n        <!--Tabla derecha-->\\n        <div class=\\\"columns medium-8\\\">\\n\\n            <ul class=\\\"tabs medium-12\\\" data-tab>\\n                <li class=\\\"tab-title medium-4 small-12 active\\\" style=\\\"text-aling:center\\\"><a href=\\\"#panel1\\\">Redime tus Kokoripesos</a></li>\\n                <li class=\\\"tab-title medium-4 small-12 \\\" style=\\\"text-aling:center\\\"><a href=\\\"#panel2\\\">Kokoripesos acumulados</a></li>\\n                <li class=\\\"tab-title medium-4 small-12 \\\" style=\\\"text-aling:center\\\"><a href=\\\"#panel3\\\">Listado de mis redenciones</a></li>\\n            </ul>\\n            <!-- <div class=\\\"menu-cuenta show-for-small-only\\\">\\n                <select>\\n                    <option value=\\\"\\\">Redime tus Kokoripesos</option>\\n                    <option value=\\\"\\\">Kokoripesos acumulados</option>\\n                    <option value=\\\"\\\">Listado de mis redenciones</option>\\n                </select>\\n            </div> -->\\n            <div class=\\\"tabs-content\\\">\\n                <div class=\\\"content active\\\" id=\\\"panel1\\\">\\n                    <div class=\\\"row text-center\\\">\\n                       <div class=\\\"container-redimir\\\">\\n                           <div class=\\\"medium-12 columns\\\">\\n                               <div class=\\\"redimir\\\">Ingresa el numero de kokoripesos que deseas redimir</div>\\n\\n                               <div class=\\\"row\\\">\\n                                   <div class=\\\"medium-12 columns\\\">\\n                                       <div class=\\\"row collapse\\\" *ngIf=\\\"getTotalPoints()\\\">\\n                                            <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                                              <div class=\\\"small-8 medium-10 columns\\\">\\n                                                <input type=\\\"hidden\\\" formControlName=\\\"entity_id\\\">\\n                                                <input type=\\\"text\\\" formControlName=\\\"value\\\" required placeholder=\\\"Ingresa los kokoripesos a redimir \\\">\\n                                              </div>\\n                                              <div class=\\\"small-4 medium-2 columns\\\">\\n                                                <button type=\\\"submit\\\" class=\\\"redemption-submit\\\" [disabled]=\\\"!profileForm.valid\\\">Redimir</button>\\n                                              </div>\\n                                            </form>\\n                                       </div>\\n                                   </div>\\n                               </div>\\n                               <div *ngIf=\\\"redemption?.message\\\">\\n                                     <span class=\\\"success\\\" [innerHTML]=\\\"redemption?.message\\\"></span>\\n                               </div>\\n                               <div *ngIf=\\\"errors\\\">\\n                                     <span class=\\\"error\\\" *ngFor=\\\"let error of errors.value\\\"[innerHTML]=\\\"error\\\"></span>\\n                               </div>\\n                               <div class=\\\"note\\\">El cupón con el valor redimido será enviado a su correo electrónico</div>\\n                               <div class=\\\"note\\\">Este código es válido para su redención dentro de los 30 días calendario siguientes a la fecha de su expedición, y te permitirá pagar todo o parte de cualquiera de los productos que estén vigentes en la carta menú del restaurante donde pretendas adquirir el producto, o de los disponibles por el canal domicilios. El producto se encontrará sujeto a la disponibilidad del restaurante. Para reclamar este beneficio a través del canal de domicilios, el cliente deberá realizar una compra de mínimo $15.000 pesos y asumir el recargo por domicilio. Es necesario informar o entregar el código de canje, en físico o enseñarlo en algún dispositivo electrónico, al cajero del restaurante Kokoriko. En el caso que el canje se realice a través del canal de domicilios, se deberá suministrar el código de redención al asesor telefónico al momento de efectuar el pedido. Este código no es válido para redención a través de las plataformas digitales de domicilios y las compras que se realicen por este medio no acumularán Kokoripesos. Compañía Comercial e Industrial de la Sabana Avesco S.A.S. y Avinco S.A.S. Consulte los términos y condiciones del Programa en www.kokoriko.com.co/kokoripesos</div>\\n                           </div>\\n                       </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"content\\\" id=\\\"panel2\\\">\\n                    <table border=\\\"1\\\" width=\\\"100%\\\">\\n                        <thead>\\n                        <tr>\\n                            <th>FECHA</th>\\n                            <th>N° FACTURA</th>\\n                            <th class=\\\"hide-for-small-only\\\">RESTAURANTE</th>\\n                            <!-- <th>VR. FACTURA</th> -->\\n                            <th>KOKORIPESOS</th>\\n                            <th class=\\\"hide-for-small-only\\\">DESCRIPCIÓN</th>\\n                            <th class=\\\"hide-for-small-only\\\">ESTADO</th>\\n                        </tr>\\n                        </thead>\\n                        <tbody *ngIf=\\\"incentives\\\">\\n                        <!-- <tbody> -->\\n                        <tr *ngFor=\\\"let invoice of getInformationPoints()\\\">\\n                            <td style=\\\"background-color:+{{invoice.class}}\\\">{{invoice.date | date}}</td>\\n                            <td style=\\\"background-color:+{{invoice.class}}\\\">{{invoice.invoice_code}}</td>\\n                            <td style=\\\"background-color:+{{invoice.class}}\\\" class=\\\"hide-for-small-only\\\">{{invoice.restaurant_code}}</td>\\n                            <!-- <td style=\\\"{{invoice.class}}\\\">{{invoice.value}}</td> -->\\n                            <td style=\\\"background-color:+{{invoice.class}}\\\">{{invoice.points | number: '1.0-0'}}</td>\\n                            <td style=\\\"background-color:+{{invoice.class}}\\\" class=\\\"hide-for-small-only\\\">{{invoice.description}}</td>\\n                            <td style=\\\"background-color:+{{invoice.class}}\\\" class=\\\"hide-for-small-only\\\">{{invoice.status}}</td >\\n                        </tr>\\n                        <div *ngIf=\\\"!incentives?.invoices\\\">\\n                           No se han encontrado datos.\\n                        </div>\\n\\n                        </tbody>\\n                    </table>\\n                </div>\\n                <div class=\\\"content\\\" id=\\\"panel3\\\">\\n                  <table border=\\\"1\\\" width=\\\"100%\\\">\\n                      <thead>\\n                        <tr> \\n                            <th>FECHA</th>\\n                            <th>CÓDIGO</th>\\n                            <th>KOKORIPESOS</th>\\n                            <th>VALOR CÓDIGO</th>\\n                        </tr>\\n                      </thead>\\n                      <tbody *ngIf=\\\"incentives?.redemptions\\\">\\n                        <tr *ngFor=\\\"let redemption of incentives?.redemptions\\\">\\n                            <td>{{redemption.created_at}}</td>\\n                            <td>{{redemption.token}}</td>\\n                            <td>{{redemption.value}}</td>\\n                            <td>$ {{redemption.value * 50 }}</td>\\n                        </tr>\\n                        <div *ngIf=\\\"!incentives?.invoices\\\">\\n                           No se han encontrado datos.\\n                        </div>\\n                      </tbody>\\n                  </table>\\n                </div>\\n            </div>\\n\\n\\n        </div>\\n        <!--Tabla derecha-->\\n    </div>\\n    <!--Estado de cuenta-->\\n\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpClientModule,HttpHeaders  } from \"@angular/common/http\";\nimport {  FormGroup,FormControl,Validators,FormBuilder } from '@angular/forms';\nimport * as $ from 'jquery';\ndeclare var Drupal: any;\ndeclare var drupalSettings: any;\n\n@Component({\n  selector: 'block-accompaniments',\n  templateUrl: './accompaniments.component.html',\n  styleUrls: ['./accompaniments.component.css']\n})\nexport class AccompanimentsComponent implements OnInit {\n\n  user              : any;\n  incentives        : any;\n  redemption_value  : any;\n  redemption_last   : any;\n  invoice_last      : any;\n  errors            : any;\n  redemption        : any;\n  api               : any;\n  headers           : any;\n  update_entity     = true;\n  profileForm       : any;\n\n  constructor(private http: HttpClient, private fb: FormBuilder) {\n    this.user = drupalSettings.kokoriko.kokorikoJS\n    if(this.user){\n      this.setUserValidator(true);\n    }\n\n    this.api = 'https://incentives.demodayscript.com/api'; //'http://incentives.kokoriko.local:8000/api';//\n    this.errors = null;\n    this.redemption = null;\n    this.redemption_value = 0\n  }\n\n  public setUser ( user ) {\n    this.user = user;\n\n  }\n\n  public getUser(){\n    return this.user;\n  }\n\n  public setUserValidator(value : boolean){\n    this.user.validator = value;\n  }\n\n  public getUserValidation(){\n    return this.user.validator;\n  }\n\n  public setRedemptionLast( data ){\n    this.redemption_last = data;\n  }\n  public getRedemptionLast(){\n    return this.redemption_last;\n  }\n\n  public setRedemptionValue( data ){\n    this.redemption_value = data;\n  }\n  public getRedemptionValue(){\n    return this.redemption_value\n  }\n\n  public setInvoiceLast( data ){\n    this.invoice_last = data;\n  }\n  public getInvoiceLast(){\n    return this.invoice_last;\n  }\n\n  public setIncentivesApi( data ){\n    this.api = data;\n  }\n\n  public getIncentivesApi(){\n    return this.api;\n  }\n\n  public setIncentives( data ){\n    if( typeof data.entity !== 'undefined'){\n      this.incentives = data.entity;\n    }else{\n      this.incentives = null;\n    }\n\n\n  }\n\n  public getIncentives(){\n    return this.incentives\n  }\n\n  public getTotalPoints(){\n    if( typeof this.incentives !== 'undefined' ){\n      return this.incentives.totalpoints\n    }\n    return false;\n  }\n  public setTotalPoints( value ){\n    this.incentives.totalpoints = value;\n  }\n\n  public getPointsOvercome(){\n    if( typeof this.incentives !== 'undefined' ){\n      return this.incentives.points_overcome.toString();\n    }else{\n      return false;\n    }\n  }\n\n  public setPointsOvercome( value ){\n    this.incentives.points_overcome = value;\n  }\n\n\n  public setHeaders(){\n    const header = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Access-Control-Allow-Headers': 'Content-Type',\n        'Access-Control-Allow-Methods': 'GET, PUT, PATCH, DELETE, OPTIONS',\n        'Access-Control-Allow-Origin': '*'\n\n      };\n\n    this.headers = new HttpHeaders(header);\n  }\n\n  public getHeaders(){\n    return this.headers;\n  }\n\n\n  ngOnInit() {\n    this.setHeaders();\n    setTimeout( ()=> {\n      this.run();\n\n    }, 500)\n\n\n\n\n  }\n\n\n  public run(){\n    this.setRedemptionValue(0);\n    if( this.getUserValidation() ){\n        this.http.get( this.api + \"/entities/\" + this.user.field_no_identificacion,this.headers)\n              .subscribe(\n                  data => {\n                      this.incentives = data;\n\n                  },\n                  error => {\n                    this.errors = error;\n                    console.log(\"error\", this.errors);\n                  },\n                  ()    => {\n                    this.errors = null;\n                    console.log(1);\n                    if(this.incentives.redemptions.length != 0 ){\n                      this.redemption_last = this.incentives.redemptions[this.incentives.redemptions.length - 1].created_at;\n\n                    }\n                    console.log(2);\n                    if(this.incentives.invoices.length != 0 ){\n                      this.invoice_last = this.incentives.invoices[this.incentives.invoices.length - 1].created_at;\n                    }\n                    console.log(3);\n\n                    this.incentives.points  = (this.incentives.points <= 0) ? 0:this.incentives.points;\n                    console.log(4);\n                    this.updateEntity();\n                    this.buidForm();\n\n                  }\n              );\n\n      }else{\n        console.error('User data not is valid!', this.user);\n      }\n  }\n\n  public updateEntity(){\n    if(this.update_entity){\n      this.user.zoho_lead_to_contact = 1;\n      this.http.put( this.api +\"/entities/\"+this.incentives.id,this.user,this.headers)\n            .subscribe(\n                data => {\n                    console.log(\"PATCH Request is successful \", data);\n                },\n                error => {\n                    this.errors = error;\n                    console.log(\"error\", this.errors);\n                },\n                () => {\n                  this.run();\n                }\n            );\n      }\n      this.update_entity = false;\n  }\n\n  public onSubmit(){\n    // this.http.post( this.api +\"/redemptions\",this.profileForm.value,this.headers)\n    //      .subscribe(\n    //          data => {\n    //              this.redemption = data;\n    //              this.errors = null;\n    //              },\n    //          error => {\n    //              this.errors = error.error;\n    //              console.log(\"error\", this.errors);\n    //          },\n    //          ()=>{\n    //             console.log('response:', this.redemption)\n    //              this.run();\n    //          }\n    //      );\n/* Se comentó por error en el api de incentives */\n        this.http.get(this.api + \"/saveRedemption/\" + this.profileForm.value.entity_id + \"/\" + this.profileForm.value.value, this.headers)\n          .subscribe( \n            data => {\n              this.redemption = data;\n              this.errors = null;\n              }, \n            error => {\n              this.errors = error.error;\n              console.log(\"error\", this.errors);\n            },  \n            ()=> {\n              console.log('response:', this.redemption);\n              this.run();\n          });\n    }\n\n  public getDate(){\n    var d = new Date();\n    d.setDate(d.getDate() + 15);\n    return d;\n  }\n\n  public buidForm(){\n\n    this.profileForm = this.fb.group({\n      entity_id:[this.incentives.id\n      ],\n      value: [\n        null,\n        Validators.required,\n      ],\n    });\n  }\n\n\n  public getInformationPoints(){\n    let points = [];\n\n\n    this.incentives.entity.forEach(\n      (item,key) => {\n        let data = {\n          date : '',\n          value: 0,\n          points: 0,\n          invoice_code: '',\n          restaurant_code: '',\n          description: '',\n          status: '',\n        }\n\n        item.entity_information.forEach( (element,key) => {\n          var day_now = Date.now();\n          let days = new Date(day_now).getTime() - new Date(element.invoice_date_up).getTime();\n          var date = (days/(1000*60*60*24));\n            if(date <= 365){\n              data.status = 'Vigente'\n            }else{\n              data.status = 'Vencido'\n            }\n            data.value += parseInt(element.value);\n            data.date  = element.invoice_date_up;\n            data.restaurant_code = element.restaurant_code;\n        });\n        data.points          = data.value / 1000;\n        data.description     = 'Acomulación por compras';\n        data.invoice_code    = item.identification;\n        points.push(data);\n      }\n    );\n\n    this.incentives.point_values.forEach(\n      (item,key) => {\n        let data = {\n          date : '',\n          value: 0,\n          points: 0,\n          invoice_code: '',\n          restaurant_code: '',\n          description: '',\n          status: '',\n          class: '',\n        }\n        data.date            = item.created_at;\n        data.value           = item.value;\n        data.points          = item.points;\n        data.description     = item.description;\n        data.status          = item.status;\n        data.class           = item.status == 'Vencido'? '#ff000054;':'';\n        data.invoice_code    = null;\n        data.restaurant_code = null;\n        points.push(data);\n      }\n    );  \n      console.log('los puntos',points);\n    return points;\n\n  }\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, LOCALE_ID } from '@angular/core';\n\nimport { AccompanimentsComponent } from './accompaniments/accompaniments.component';\n//import { AddressesComponent } from './addresses/addresses.component';\nimport { HttpClient, HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule } from '@angular/forms';\n\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { registerLocaleData } from '@angular/common';\nimport localeFr from '@angular/common/locales/es';\nimport localeFrExtra from '@angular/common/locales/extra/es';\n\nregisterLocaleData(localeFr, 'es-CO', localeFrExtra);\n\n@NgModule({\n  declarations: [\n    AccompanimentsComponent,\n    // AddressesComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [HttpClient, HttpClientModule, {provide: LOCALE_ID, useValue: \"es-CO\" }],\n  bootstrap: [\n    AccompanimentsComponent,\n    // AddressesComponent\n  ]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}