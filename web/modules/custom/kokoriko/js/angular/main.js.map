{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/accompaniments/accompaniments.component.css","webpack:///./src/app/accompaniments/accompaniments.component.html","webpack:///./src/app/accompaniments/accompaniments.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div id=\\\"cuenta\\\">\\n    <!--Hola + Botones de usuario-->\\n    <div class=\\\"row user-container\\\">\\n\\n        <div class=\\\"medium-4 columns\\\">\\n            <div class=\\\"row\\\">\\n                <!--<div class=\\\"small-4 columns\\\">\\n                    <img src=\\\"{{elements.user_picture}}\\\" alt=\\\"\\\" class=\\\"photo\\\">\\n                </div>-->\\n\\n                <div class=\\\"small-12 columns text-align-left\\\">\\n                    <div class=\\\"hi\\\">HOLA</div>\\n                    <div class=\\\"user\\\">{{elements.field_nombres}} {{elements.field_apellidos}}</div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"columns medium-7\\\">\\n            <div class=\\\"botones\\\">\\n                <a href=\\\"#block-comofunciona\\\" id=\\\"menu-como\\\" class=\\\"button account\\\">¿Cómo funciona?</a>\\n                <a href=\\\"/user/{{elements.id}}/edit\\\" class=\\\"button account\\\">Actualizar datos</a>\\n                <a href=\\\"/user/logout\\\" class=\\\"button account\\\">Cerrar sesión</a>\\n            </div>\\n        </div>\\n    </div>\\n    <!--Hola + Botones de usuario-->\\n\\n\\n    <!--Banner central-->\\n    <div class=\\\"row hide-for-small-only\\\">\\n        <div class=\\\"columns medium-12\\\">\\n            <img src=\\\"/themes/contrib/kokoriko_theme/images/banner-kkp.jpg\\\" alt=\\\"\\\" class=\\\"banner\\\">\\n        </div>\\n    </div>\\n    <!--Banner central-->\\n\\n    <!--Estado de cuenta-->\\n    <div class=\\\"row\\\">\\n        <!--Navegador izquierda-->\\n        <div class=\\\"columns medium-4\\\">\\n            <div class=\\\"container-cuenta\\\">\\n                <h3>Estado de cuenta</h3>\\n                <hr>\\n                <div class=\\\"fecha\\\"></div>\\n                <div>Tienes disponibles</div>\\n\\n                <div class=\\\"kokoripesos\\\">{{incentives?.entity?.points}}</div>\\n                <img src=\\\"/themes/contrib/kokoriko_theme/images/kokoripesos-red.png\\\" alt=\\\"\\\" class=\\\"text-center\\\">\\n                <hr>\\n                <div class=\\\"vencidos\\\"><span>{{incentives?.entity?.points_overcome}} Kokoripesos </span> por vencer</div>\\n                <div class=\\\"fecha\\\"> {{getDate() | date: 'mediumDate'}}</div>\\n                <hr>\\n                <div class=\\\"recent\\\">Ultima redención: <span>{{redemption_last | date}}</span></div>\\n                <div class=\\\"recent\\\">Ultima acumulación: <span>{{invoice_last | date}}</span></div>\\n            </div>\\n        </div>\\n        <!--Navegador izquierda-->\\n\\n        <!--Tabla derecha-->\\n        <div class=\\\"columns medium-8\\\">\\n\\n            <ul class=\\\"tabs hide-for-small-only\\\" data-tab>\\n                <li class=\\\"tab-title active\\\"><a href=\\\"#panel1\\\">Redime tus Kokoripesos</a></li>\\n                <li class=\\\"tab-title\\\"><a href=\\\"#panel2\\\">Kokoripesos acumulados</a></li>\\n                <li class=\\\"tab-title\\\"><a href=\\\"#panel3\\\">Listado de mis redenciones</a></li>\\n            </ul>\\n            <div class=\\\"menu-cuenta show-for-small-only\\\">\\n                <select>\\n                    <option value=\\\"\\\">Redime tus Kokoripesos</option>\\n                    <option value=\\\"\\\">Kokoripesos acumulados</option>\\n                    <option value=\\\"\\\">Listado de mis redenciones</option>\\n                </select>\\n            </div>\\n            <div class=\\\"tabs-content\\\">\\n                <div class=\\\"content active\\\" id=\\\"panel1\\\">\\n                    <div class=\\\"row text-center\\\">\\n                       <div class=\\\"container-redimir\\\">\\n                           <div class=\\\"medium-12 columns\\\">\\n                               <div class=\\\"redimir\\\">Ingresa el valor que deseas redimir</div>\\n\\n                               <div class=\\\"row\\\">\\n                                   <div class=\\\"medium-12 columns\\\">\\n                                       <div class=\\\"row collapse\\\">\\n                                           <div class=\\\"small-8 medium-10 columns\\\">\\n                                               <input  [(ngModel)]=\\\"redemption_value\\\" type=\\\"text\\\" placeholder=\\\"Ingrese el monto a redimir\\\">\\n                                           </div>\\n                                           <div class=\\\"small-4 medium-2 columns\\\">\\n                                               <a (click)=\\\"redemptionPost($event)\\\" class=\\\"button postfix\\\">Redimir</a>\\n                                           </div>\\n                                       </div>\\n                                   </div>\\n                               </div>\\n                               <div *ngIf=\\\"incentives?.status === 200\\\">\\n                                 <span>Has redimido {{redemption_value}} kokoripesos, y se ha enviado una notificación a tu correo electronico </span>\\n                               </div>\\n                               <div *ngIf=\\\"errors?.status || errors?.status === 0\\\">\\n                                 <div [ngSwitch]=\\\"errors.status\\\" class=\\\"errors\\\">\\n                                   <span *ngSwitchCase=\\\"422\\\">El valor a redimir solo puede contener numeros</span>\\n                                   <span *ngSwitchCase=\\\"401\\\">El numero de kokoripesos a redimir debe ser menor o igual al numero de kokoripesos disponibles.</span>\\n                                   <span *ngSwitchDefault >No es posible redimir en estos momentos, por favor intentelo mas tarde.</span>\\n                                 </div>\\n                               </div>\\n                               <div class=\\\"note\\\">El cupón con el valor redimido será enviado a su correo electrónico</div>\\n                           </div>\\n                       </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"content\\\" id=\\\"panel2\\\">\\n                    <table border=\\\"1\\\" width=\\\"100%\\\">\\n                        <thead>\\n                        <tr>\\n                            <th>FECHA FACTURA</th>\\n                            <th>N° FACTURA</th>\\n                            <th>RESTAURANTE</th>\\n                            <th>VR. FACTURA</th>\\n                            <th>KOKORIPESOS</th>\\n                        </tr>\\n                        </thead>\\n                        <tbody *ngIf=\\\"incentives?.entity?.invoices\\\">\\n                        <tr *ngFor=\\\"let invoice of incentives?.entity?.invoices\\\">\\n                            <td>{{invoice.invoice_date_up}}</td>\\n                            <td>{{invoice.invoice_code}}</td>\\n                            <td>{{invoice.restaurant_code}}</td>\\n                            <td>$ {{invoice.value}}</td>\\n                            <td>102</td>\\n                        </tr>\\n                        <div *ngIf=\\\"!incentives?.entity?.invoices\\\">\\n                           No se han encontrado datos.\\n                        </div>\\n\\n                        </tbody>\\n                    </table>\\n                </div>\\n                <div class=\\\"content\\\" id=\\\"panel3\\\">\\n                  <table border=\\\"1\\\" width=\\\"100%\\\">\\n                      <thead>\\n                        <tr>\\n                            <th>FECHA DE REDENCIÓN</th>\\n                            <th>CÓDIGO</th>\\n                            <th>VALOR</th>\\n                        </tr>\\n                      </thead>\\n                      <tbody *ngIf=\\\"incentives?.entity?.redemptions\\\">\\n                        <tr *ngFor=\\\"let redemption of incentives?.entity?.redemptions\\\">\\n                            <td>{{redemption.created_at}}</td>\\n                            <td>{{redemption.token}}</td>\\n                            <td>$ {{redemption.value}}</td>\\n                        </tr>\\n                        <div *ngIf=\\\"!incentives?.entity?.invoices\\\">\\n                           No se han encontrado datos.\\n                        </div>\\n                      </tbody>\\n                  </table>\\n                </div>\\n            </div>\\n\\n\\n        </div>\\n        <!--Tabla derecha-->\\n    </div>\\n    <!--Estado de cuenta-->\\n\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpClientModule } from \"@angular/common/http\";\nimport * as $ from 'jquery';\ndeclare var Drupal: any;\ndeclare var drupalSettings: any;\n\n@Component({\n  selector: 'block-accompaniments',\n  templateUrl: './accompaniments.component.html',\n  styleUrls: ['./accompaniments.component.css']\n})\nexport class AccompanimentsComponent implements OnInit {\n\n  elements: any;\n  incentives: any;\n  redemption_value:any = 0;\n  redemption_last:any;\n  invoice_last:any;\n  errors: any = null;\n\n\n  constructor(private http: HttpClient) {\n    this.elements = drupalSettings.kokoriko.kokorikoJS\n    this.elements.validator = true;\n    console.log(this.elements);\n  }\n\n  ngOnInit() {\n    this.validateData();\n    this.getData();\n  }\n\n\n  getData(){\n    if(this.elements.validator){\n        this.http.get(\"https://incentives.demodayscript.com/api/entities/\" + this.elements.field_no_identificacion)\n              .subscribe(\n                  data => {\n                      this.incentives = data;\n                      this.redemption_value = this.incentives.points;\n                      this.errors = null;\n                      if(this.incentives.entity.redemptions.length != 0 ){\n                        this.redemption_last = this.incentives.entity.redemptions[this.incentives.entity.redemptions.length - 1].created_at;\n\n                      }\n                      if(this.incentives.entity.invoices.length != 0 ){\n                        this.invoice_last = this.incentives.entity.invoices[this.incentives.entity.invoices.length - 1].created_at;\n\n                      }\n                      \n                      this.incentives.entity.points  = (this.incentives.entity.points <= 0) ? 0:this.incentives.entity.points;\n\n                      console.log(\"GET Request is successful \", this.incentives.entity);\n\n                  },\n                  error => {\n                    this.createEntity();\n                    this.errors = error;\n                    console.log(\"error\", this.errors);\n                  }\n              );\n\n            }\n  }\n\n  validateData(){\n    if(this.elements.field_no_identificacion == null){\n      console.log('property field_no_identificacion not exist!');\n      this.elements.validator = false;\n    }\n  }\n\n  redemptionPost(){\n    this.http.post(\"https://incentives.demodayscript.com/api/redemptions\",{'entity_id':this.incentives.entity.id,'value':this.redemption_value})\n          .subscribe(\n              data => {\n                  this.incentives = data;\n                  this.errors = null;\n                  console.log(\"POST Request is successful \", data);\n                  this.getData();\n              },\n              error => {\n                  this.errors = error;\n                  console.log(\"error\", this.errors);\n              }\n          );\n\n        }\n\n  createEntity(){\n    this.http.post(\"https://incentives.demodayscript.com/api/entities\",{'identification':this.elements.field_no_identificacion,'name':this.elements.field_nombres})\n          .subscribe(\n              data => {\n                  console.log(\"POST Request is successful \", data);\n                  this.getData();\n              },\n              error => {\n                  this.errors = error;\n                  console.log(\"error\", this.errors);\n              }\n          );\n  }\n\n    getDate(){\n      var d = new Date();\n      d.setDate(d.getDate() + 15);\n      return d;\n    }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AccompanimentsComponent } from './accompaniments/accompaniments.component';\nimport { AddressesComponent } from './addresses/addresses.component';\nimport { HttpClient, HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [\n    AccompanimentsComponent,\n    // AddressesComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [HttpClient, HttpClientModule],\n  bootstrap: [\n    AccompanimentsComponent,\n    // AddressesComponent\n  ]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}