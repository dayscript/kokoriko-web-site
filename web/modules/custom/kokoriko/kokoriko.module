<?php

/**
 * @file
 * Contains kokoriko.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function kokoriko_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the kokoriko module.
    case 'help.page.kokoriko':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Modulo Kokoriko') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function kokoriko_theme($existing, $type, $theme, $path) {
  return [
    'kokoriko' => [
      'render element' => 'children',
    ],

    'full_image_block' => array(
     'variables' => array('data' => NULL),
   ),
  ];
}


/**
 * [kokoriko_preprocess_html description]
 * @param  [type] $variables [description]
 * @return [type]            [description]
 */
function kokoriko_preprocess_html(&$variables){

  $variables['#attached']['library'][] = 'kokoriko/angular';


}

/**
 * [kokoriko_preprocess_image_widget description]
 * Thumbail to field image_widget into DomiciliosBlock
 * @param [type] $variables [description]
 */
function kokoriko_preprocess_image_widget(&$variables) {
    $element = $variables['element'];

    $variables['attributes'] = array('class' => array('image-widget', 'js-form-managed-file', 'form-managed-file', 'clearfix'));

    if (!empty($element['fids']['#value'])) {
      $file = reset($element['#files']);
      $element['file_' . $file->id()]['filename']['#suffix'] = ' <span class="file-size">(' . format_size($file->getSize()) . ')</span> ';
      $file_variables = array(
        'style_name' => $element['#preview_image_style'],
        'uri' => $file->getFileUri(),
      );

      // Determine image dimensions.
      if (isset($element['#value']['width']) && isset($element['#value']['height'])) {
        $file_variables['width'] = $element['#value']['width'];
        $file_variables['height'] = $element['#value']['height'];
      } else {
        $image = \Drupal::service('image.factory')->get($file->getFileUri());
        if ($image->isValid()) {
          $file_variables['width'] = $image->getWidth();
          $file_variables['height'] = $image->getHeight();
        }
        else {
          $file_variables['width'] = $file_variables['height'] = NULL;
        }
      }

      $element['preview'] = array(
        '#weight' => -10,
        '#theme' => 'image_style',
        '#width' => $file_variables['width'],
        '#height' => $file_variables['height'],
        '#style_name' => $file_variables['style_name'],
        '#uri' => $file_variables['uri'],
      );

      // Store the dimensions in the form so the file doesn't have to be
      // accessed again. This is important for remote files.
      $element['width'] = array(
        '#type' => 'hidden',
        '#value' => $file_variables['width'],
      );
      $element['height'] = array(
        '#type' => 'hidden',
        '#value' => $file_variables['height'],
      );
    }

    $variables['data'] = array();
    foreach (\Drupal\Core\Render\Element::children($element) as $child) {
      $variables['data'][$child] = $element[$child];
    }
}
