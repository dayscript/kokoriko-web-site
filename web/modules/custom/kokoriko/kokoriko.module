<?php

/**
 * @file
 * Contains kokoriko.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;



/**
 * Implements hook_help().
 */
function kokoriko_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the kokoriko module.
    case 'help.page.kokoriko':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Modulo Kokoriko') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function kokoriko_theme($existing, $type, $theme, $path) {
  return [
    'kokoriko' => [
      'render element' => 'children',
    ],

    'full_image_block' => array(
     'variables' => array('data' => NULL),
   ),
  ];
}


/**
 * [kokoriko_preprocess_html description]
 * @param  [type] $variables [description]
 * @return [type]            [description]
 */
function kokoriko_preprocess_html(&$variables){

  $variables['#attached']['library'][] = 'kokoriko/angular';


}

/**
 * [kokoriko_preprocess_image_widget description]
 * Thumbail to field image_widget into DomiciliosBlock
 * @param [type] $variables [description]
 */
function kokoriko_preprocess_image_widget(&$variables) {
    $element = $variables['element'];

    $variables['attributes'] = array('class' => array('image-widget', 'js-form-managed-file', 'form-managed-file', 'clearfix'));

    if (!empty($element['fids']['#value'])) {
      $file = reset($element['#files']);
      $element['file_' . $file->id()]['filename']['#suffix'] = ' <span class="file-size">(' . format_size($file->getSize()) . ')</span> ';
      $file_variables = array(
        'style_name' => $element['#preview_image_style'],
        'uri' => $file->getFileUri(),
      );

      // Determine image dimensions.
      if (isset($element['#value']['width']) && isset($element['#value']['height'])) {
        $file_variables['width'] = $element['#value']['width'];
        $file_variables['height'] = $element['#value']['height'];
      } else {
        $image = \Drupal::service('image.factory')->get($file->getFileUri());
        if ($image->isValid()) {
          $file_variables['width'] = $image->getWidth();
          $file_variables['height'] = $image->getHeight();
        }
        else {
          $file_variables['width'] = $file_variables['height'] = NULL;
        }
      }

      $element['preview'] = array(
        '#weight' => -10,
        '#theme' => 'image_style',
        '#width' => $file_variables['width'],
        '#height' => $file_variables['height'],
        '#style_name' => $file_variables['style_name'],
        '#uri' => $file_variables['uri'],
      );

      // Store the dimensions in the form so the file doesn't have to be
      // accessed again. This is important for remote files.
      $element['width'] = array(
        '#type' => 'hidden',
        '#value' => $file_variables['width'],
      );
      $element['height'] = array(
        '#type' => 'hidden',
        '#value' => $file_variables['height'],
      );
    }

    $variables['data'] = array();
    foreach (\Drupal\Core\Render\Element::children($element) as $child) {
      $variables['data'][$child] = $element[$child];
    }
}


function kokoriko_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id){

    #block field_no_identificacion if yours value is diferent to null
    $current_user = \Drupal::currentUser();
    $user = \Drupal\user\Entity\User::load($current_user->id());

    if($form_id == 'user_form'){

      if($user->hasRole('facebook')){
        $form['account']['name']['#access'] = FALSE;
        $form['account']['pass']['#access'] = FALSE;
      }

      if($form['field_no_identificacion']['widget'][0]['value']['#default_value']){
          $form['field_no_identificacion']['#disabled'] = 'disabled';
      }else{
        $form['#validate'][] = '_form_validation_field_no_indentification_validate';
      }

    }
}


/**
 * Implements hook_form_FORM_ID_alter() for user_register_form.
 */
function kokoriko_form_user_register_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  foreach ( _kokoriko_custom_require_fields() as $key => $value) {
    $form[$key]['widget'][0]['value']['#required'] = $value;
    $form[$key]['widget'][0]['#required'] = $value;
  }


  $form['account']['name']['#access'] = FALSE;

  $random = new \Drupal\Component\Utility\Random();
  $form['account']['name']['#default_value'] = $random->name();

  $form['#validate'][] = '_form_validation_field_no_indentification_validate';

  array_unshift($form['actions']['submit']['#submit'], 'kokoriko_autofill_username_in_register_form');
}

/**
 * Custom validation callback for user_register_form.
 */
function _form_validation_field_no_indentification_validate(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {

  if ($form_state->hasValue('field_no_identificacion')) {
      $identification = $form_state->getValue('field_no_identificacion');
      $entities = \Drupal::entityTypeManager()->getStorage('user')->loadByProperties(['field_no_identificacion' => $identification[0]['value']]);
      if($entities){
        $form_state->setErrorByName('field_no_identificacion', t('El numero de cedula ya esta registrado'));
      }
    }
}

/**
 * Custom submit callback for user_register_form.
 */
function kokoriko_autofill_username_in_register_form(array &$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $identification = $form_state->getValue('field_no_identificacion');
  $form_state->setValue('name', $identification);
}

/**
 * Return array with fields to required for user_register_form.
 */

 function _kokoriko_custom_require_fields(){
   $fields = [];

   $fields = [
     'field_no_identificacion' => TRUE,
   ];

   return $fields;
 }


 /**
* Implements hook_mail().
*/
function kokoriko_mail($key, &$message, $params) {
  $options = array(
  'langcode' => $message['langcode'],
  );
  switch ($key) {
    case 'user_create_form_incentives':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = t('Hola @user_name Activa tu cuenta de kokoripesos', array('@user_name' => $params['user_name']), $options);
      $message['body'][] = $params['message'];
    break;
  }
}

/**
* Implements hook_user_insert().
*/
function kokoriko_user_insert(Drupal\Core\Entity\EntityInterface $entity) {

  if ( $entity->getEntityTypeId() === 'user' ) {

    $user = \Drupal\user\Entity\User::load($entity->id());

    if ( $user->hasRole('incentives') ) {
        $mailManager = \Drupal::service('plugin.manager.mail');
        $module = 'kokoriko';
        $key = 'user_create_form_incentives';
        $to = $user->get('mail')->value;

        $data['name'] = $user->get('field_no_identificacion')->value;
        $data['site_name'] = 'Kokoriko';
        $data['site_url'] = user_pass_reset_url($user);
        $data['site_login'] = 'https://kokoriko.demodayscript.com/kokoripesos';

        $params['user_name'] = $user->get('field_nombres')->value.' '.$user->get('field_apellidos')->value;
        $params['message'] = t(html_for_mail_incentives(),
                              array(
                                '@user_name' => $params['user_name'],
                                '@name' => $data['name'],
                                '@password' => $data['password'],
                                '@site_name' => $data['site_name'],
                                '@site_url' => $data['site_url'],
                                )
                              );
        $langcode = \Drupal::currentUser()->getPreferredLangcode();
        $send = true;
        $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);

        if ($result['result'] !== true) {
        drupal_set_message(t('There was a problem sending your message and it was not sent.'), 'error');
        } else {
        drupal_set_message(t('Your message has been sent.'));
        }

      }

    }
}

function html_for_mail_incentives(){
  return '
@user_name,
Un administrador del sitio @site_name ha creado una cuenta para usted. Puede ahora iniciar sesión haciendo clic en este enlace o copiando y pegándolo en su navegador:

@site_url

Este enlace solo puede ser usado una vez para iniciar sesión y le conducirá a la página donde podrá establecer su contraseña.

Después de establecer su contraseña, será capaz de iniciar sesión en @site_login en el futuro usando:

Nombre de usuario: @name
Contraseña: Su contraseña

--  Equipo de [site:name]';
}
